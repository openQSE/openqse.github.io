name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  # Build and deploy preview
  build-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "/previews/pr-${{ github.event.pull_request.number }}"
        env:
          JEKYLL_ENV: production

      - name: Deploy preview to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          destination_dir: previews/pr-${{ github.event.pull_request.number }}
          keep_files: true

      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://openqse.org/previews/pr-${prNumber}/`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview deployed')
            );

            const commentBody = `## ðŸš€ Preview deployed!

            **Preview URL:** ${previewUrl}

            Built from commit: ${context.payload.pull_request.head.sha.substring(0, 7)}

            The preview will update automatically when you push new commits to this PR.`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  # Clean up preview when PR is closed
  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove preview directory
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -d "previews/pr-${{ github.event.pull_request.number }}" ]; then
            git rm -rf "previews/pr-${{ github.event.pull_request.number }}"
            git commit -m "Clean up preview for PR #${{ github.event.pull_request.number }}"
            git push
          fi

      - name: Comment cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: 'ðŸ§¹ Preview cleaned up.'
            });
